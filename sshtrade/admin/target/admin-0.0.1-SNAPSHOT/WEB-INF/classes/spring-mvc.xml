<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 扫描controller -->
	<context:component-scan base-package="com.example.project"></context:component-scan>

	<mvc:annotation-driven/>

	<context:annotation-config />

	<!-- 扫描Spring组件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="minimumIdle" value="10"/>
		<property name="connectionTestQuery" value="SELECT 1"/>
	</bean>

	<!-- 事务管理   -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--事务通知  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为[www.mf5. cn] -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!--事务通知  -->
	<aop:aspectj-autoproxy/>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* *com.example.project.service.impl.*.*(..))" id="transService"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transService"/>
	</aop:config>

	<!-- 整合MyBatis[www.mf5.cn] -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<!-- 指定mybatis 全局配置文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		<property name="typeAliasesPackage" value="com.example.project.entity"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="globalConfig" ref="globalConfig"/>
		<property name="plugins">
			<array>
				<bean class="com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor">
					<property name="interceptors">
						<list>
							<bean id="paginationInnerInterceptor"
								  class="com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor">
								<constructor-arg name="dbType" value="MYSQL"/>
							</bean>
						</list>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.example.project.mapper"/>
	</bean>

	<bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
		<property name="metaObjectHandler">
			<bean class="com.example.project.common.MyMetaObjectHandler"/>
		</property>
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1048576000" />
	</bean>

	<!-- 整合sa-token[www.mf5.cn] -->
	<!-- Sa-Token[www.mf5.cn]-->
	<bean class="org.springframework.boot.autoconfigure.EnableAutoConfiguration" abstract="true">
	</bean>
	<bean class="cn.dev33.satoken.spring.SaBeanRegister"/>
	<bean id="saLogForConsole" class="cn.dev33.satoken.log.SaLogForConsole"/>
	<bean class="cn.dev33.satoken.spring.SaBeanInject">
		<constructor-arg ref="saLogForConsole"/>
		<constructor-arg ref="sa-token"/>
		<property name="saTokenDao" ref="saTokenDao"/>
		<property name="stpLogic">
			<bean class="cn.dev33.satoken.jwt.StpLogicJwtForSimple"/>
		</property>
	</bean>

	<bean name="saTokenDao" class="cn.dev33.satoken.dao.SaTokenDaoDefaultImpl"></bean>

	<!--sa-token配置[www. mf5.cn]-->
	<bean id="sa-token" class="cn.dev33.satoken.config.SaTokenConfig">
		<!--token名称 (同时也是cookie名称)-->
		<property name="tokenName" value="Authorization"></property>
		<!--token有效期，单位s 默认30天, -1代表永不过期-->
		<property name="timeout" value="-1"></property>
		<!--是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)-->
		<property name="isConcurrent" value="true"></property>
		<!--在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)-->
		<property name="isShare" value="true"></property>
		<property name="tokenPrefix" value="Bearer"/>
		<!--是否输出操作日志-->
		<property name="isLog" value="false"/>
		<property name="jwtSecretKey" value="dsakdhbkasndsanbdksalsakdljkadlasldsadlsajd20981u301))_-w2--2"/>
	</bean>

</beans>